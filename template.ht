<HTML>
<HEAD>
<META charset="UTF-8">
<SCRIPT>

function onLoad()
{
	var g_wa;
	var memory_bytes; //Actually a  UInt8Array of the memory object.
	var memory_words; //Actually an Int32Array of the memory object.
	var callStack;
	var sleeping = false;
	var canvas = document.getElementById( "rawdrawcanvas" );
	var ctx = canvas.getContext("2d");
	var lastx=null, lasty=null;

	function UTF8ToString( memory_address ) { memory_address |= 0; var ret = ""; var ch = 0|0; for( var v = memory_address; ch = memory_bytes[v]; v++ ) ret += String.fromCharCode(ch); return ret; }

	var wasmblob = atob( "\
%WASMBLOB%
	");

	var array = new Uint8Array(new ArrayBuffer(wasmblob.length));
	for(i = 0; i < wasmblob.length; i++) {
		array[i] = wasmblob.charCodeAt(i);
	}

	var imports = {
		env : {
			canvasClear : function() { ctx.clearRect(0, 0, canvas.width, canvas.height); },
			beginPath : function() { ctx.beginPath(); },
			tackSegment: function( x1, y1, x2, y2 ) { if( x1 !== lastx || y1 !== lasty ) { ctx.moveTo( x1, y1 ); } ctx.lineTo( x2, y2 ); lastx = x1; lasty = y1; },
			stroke : function() { ctx.stroke(); },
			submitFrame : function() {
				if (!sleeping) {
					g_wa.instance.exports.asyncify_start_unwind(callStack);
					sleeping = true;
					window.requestAnimationFrame(function() {
					  g_wa.instance.exports.asyncify_start_rewind(callStack);
					  g_wa.instance.exports.animation();
					});
				} else {
					g_wa.instance.exports.asyncify_stop_rewind();
					sleeping = false;
				}
			}
		}
	};

	WebAssembly.instantiate( array, imports ).then( 
		function(wa) {
			g_wa = wa;
			memory_bytes = new Uint8Array(g_wa.instance.exports.memory.buffer);
			memory_words = new Int32Array(g_wa.instance.exports.memory.buffer);
			callStack = g_wa.instance.exports.getCallStackData();
			console.log( wa );
			console.log( wa.instance );
			g_wa.instance.exports.animation();
			g_wa.instance.exports.asyncify_stop_unwind();
		}
	);
}

</SCRIPT>
</HEAD>
<BODY onLoad=onLoad()>
<TABLE border=1><TR><TD WIDTH=640>
<DIV STYLE="position:absolute;width:640">
<DIV>This is an example of a fully integrated wasm page.  It shows how you can run wasm without fetch() or anything so it loads super quick even over connections with really high latency, or you can run it from your hard drive just by double clicking on it.  Check out the project here: <A HREF=https://github.com/cnlohr/wasm_integrated>https://github.com/cnlohr/wasm_integrated</A>.</DIV>
</DIV>
<DIV STYLE="positon:absolute;z-index:3">
<CANVAS ID=rawdrawcanvas WIDTH=640 HEIGHT=480></CANVAS>
</DIV>
</TD></TR></TABLE>
</BODY>
</HTML>

